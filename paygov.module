<?php
/**
 * Menu callbacks.
 */
function paygov_menu() {
  $items['admin/config/system/paygov'] = array(
    'title' => 'Pay.gov settings',
    'description' => 'Administrative settings for global pay.gov operations',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('paygov_admin_form'),
    'access arguments' => array('administer configuration'),
  );

  // The following link is for debugging purposes only.
  /*$items['test-paygov'] = array(
    'page callback' => '_paygov_test_callback',
    'access callback' => TRUE,
  );*/
  return $items;
}

/**
 * Test an example request for debugging purposes.
 */
function _paygov_test_callback() {
  // Fake options.
  $options = array(
    'agency_id' => '944',
    'tcs_app_id' => '2601',
    'agency_tracking_id' => '101207103852841',
    'amount' => '15.25',
    'card_number' => '5411112222222221',
    'card_exp_year' => '2017',
    'card_exp_month' => '05',
    'first_name' => 'Sonny',
    'middle_initial' => '',
    'last_name' => 'Bono',
    'card_security_code' => '998',
    'billing_address1' => '34-12 36th Street',
    'billing_address2' => '',
    'billing_city' => 'Astoria',
    'billing_state' => 'NY',
    'billing_zip' => '11106-1214',
    'email' => 'test@test.com',
  );

  // Fake call.
  $response = paygov_invoke($options, 'credit card', 'https://qa.tcs.pay.gov');

  dpm($response);

  // Process.
  $processed = _paygov_process_response('credit card', $response);

  dpm($processed);

  return 'Processing status: ' . $processed;
}

/**
 * API callback.
 *
 * @param $environment
 * @param $method
 * @param array $options
 */
function paygov_invoke($options = array(), $method = NULL, $environment = NULL) {

  // Verify method is set properly.
  if (empty($method)) {
    $method = variable_get('paygov_handler', NULL);
  }

  if (empty($method)) {
    drupal_set_message('Please configure the your default method.', 'error');
    return;
  }

  // Sanitize options.
  foreach ($options as $key => $option) {
    $options[$key] = check_plain($option);
  }

  // Create the message.
  $message = '';
  switch ($method) {
    case 'credit card':
      $message = theme('paygov_credit_card_handler', array('options'=>$options));
      break;
  }

  // Send the message.
  if (empty($environment)) {
    $environment = variable_get('paygov_environment', NULL);
  }

  if (empty($environment)) {
    drupal_set_message('Please configure the environment.', 'error');
    return;
  }

  dpm($message);

  switch ($method) {
    case 'credit card':
      $msg_params = array(
        'headers' => array(
          'Content-Type' => 'application/xml',
        ),
        'method' => 'POST',
        'data' => $message,
      );
      return drupal_http_request($environment . '/tcscollections/services/TCSSingleService', $msg_params);
  }
}

/**
 * Custom theme callbacks.
 *
 * @return array
 */
function paygov_theme() {
  return array(
    'paygov_credit_card_handler' => array(
      'template' => 'paygov_credit_card_handler',
      'variables' => array('options' => FALSE),
      'path' => drupal_get_path('module', 'paygov') . '/templates',
    ),
  );
}

/**
 * Process response.
 *
 * @param $method
 * @param $response
 */
function _paygov_process_response($method, $response) {
  switch ($method) {
    case 'credit card':
      return _paygov_process_credit_card_response($response);
  }
}

/**
 * Process credit card response.
 *
 * @param $response
 */
function _paygov_process_credit_card_response($response) {
  if (!empty($response->error)) {
    return FALSE;
  } else if (strpos('<tcs:transaction_status>Success</tcs:transaction_status>', $response->data)) {
    return TRUE;
  }
}

/**
 * Administrative configuration form.
 */
function paygov_admin_form($form, &$form_state) {
  // Select default environment.
  $form['paygov_environment'] = array(
    '#type' => 'select',
    '#title' => t('Pay.Gov Default Environment'),
    '#description' => t('Select your API endpoint'),
    '#default_value' => variable_get('paygov_environment', NULL),
    '#required' => TRUE,
    '#options' => array(
      'https://qa.tcs.pay.gov' => t('Testing'),
      'https://tcs.pay.gov' => t('Production'),
    ),
  );

  // Select default handler.
  $form['paygov_handler'] = array(
    '#type' => 'select',
    '#title' => t('Pay.Gov Default Payment Handler'),
    '#description' => t('Select your default payment handler'),
    '#default_value' => variable_get('paygov_handler', NULL),
    '#required' => TRUE,
    '#options' => array(
      'credit card' => t('Credit Card'),
    ),
  );

  return system_settings_form($form);
}
